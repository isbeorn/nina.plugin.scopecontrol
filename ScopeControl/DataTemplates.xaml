<ResourceDictionary
    x:Class="ScopeControl.DataTemplates"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:NINA.Core.Utility.Converters;assembly=NINA.Core"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:ns="clr-namespace:NINA.Core.Locale;assembly=NINA.Core"
    xmlns:rules="clr-namespace:NINA.Core.Utility.ValidationRules;assembly=NINA.Core">
    <converter:InverseBooleanToVisibilityCollapsedConverter x:Key="InverseBooleanToVisibilityCollapsedConverter" />
    <converter:InverseMultiBooleanORConverter x:Key="InverseMultiBooleanORConverter" />
    <converter:InverseBooleanConverter x:Key="InverseBooleanConverter" />
    <converter:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" />
    <BooleanToVisibilityConverter x:Key="VisibilityConverter" />

    <DataTemplate x:Key="ScopeControl.ScopeControlDock_Dockable">
        <Grid Margin="5" IsEnabled="{Binding TelescopeInfo.Connected}">
            <Grid.RowDefinitions>
                <RowDefinition Height="5*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="2" Margin="0,5,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid DataContext="{Binding SlewScopeToRaDec}">
                    <WrapPanel DataContext="{Binding Coordinates}" Orientation="Horizontal">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock
                                MinWidth="24"
                                VerticalAlignment="Center"
                                Text="RA" />
                            <TextBox
                                MinWidth="30"
                                Margin="5,0,0,0"
                                TextAlignment="Right">
                                <TextBox.Text>
                                    <Binding Path="RAHours" UpdateSourceTrigger="LostFocus">
                                        <Binding.ValidationRules>
                                            <rules:HoursRule />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBlock VerticalAlignment="Center">h</TextBlock>
                            <TextBox
                                MinWidth="30"
                                Margin="5,0,0,0"
                                TextAlignment="Right">
                                <TextBox.Text>
                                    <Binding Path="RAMinutes" UpdateSourceTrigger="LostFocus">
                                        <Binding.ValidationRules>
                                            <rules:MinutesRule />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBlock VerticalAlignment="Center">m</TextBlock>
                            <TextBox
                                MinWidth="30"
                                Margin="5,0,0,0"
                                TextAlignment="Right">
                                <TextBox.Text>
                                    <Binding Path="RASeconds" UpdateSourceTrigger="LostFocus">
                                        <Binding.ValidationRules>
                                            <rules:SecondsRule />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">s</TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock
                                MinWidth="24"
                                VerticalAlignment="Center"
                                Text="Dec" />
                            <TextBox
                                MinWidth="30"
                                Margin="5,0,0,0"
                                TextAlignment="Right">
                                <TextBox.Text>
                                    <MultiBinding Converter="{StaticResource DecDegreeConverter}" UpdateSourceTrigger="LostFocus">
                                        <Binding Path="NegativeDec" />
                                        <Binding Path="DecDegrees">
                                            <Binding.ValidationRules>
                                                <rules:DegreesRule />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </MultiBinding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBlock VerticalAlignment="Center">d</TextBlock>
                            <TextBox
                                MinWidth="30"
                                Margin="5,0,0,0"
                                TextAlignment="Right">
                                <TextBox.Text>
                                    <Binding Path="DecMinutes" UpdateSourceTrigger="LostFocus">
                                        <Binding.ValidationRules>
                                            <rules:MinutesRule />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBlock VerticalAlignment="Center">m</TextBlock>
                            <TextBox
                                MinWidth="30"
                                Margin="5,0,0,0"
                                TextAlignment="Right">
                                <TextBox.Text>
                                    <Binding Path="DecSeconds" UpdateSourceTrigger="LostFocus">
                                        <Binding.ValidationRules>
                                            <rules:SecondsRule />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBlock VerticalAlignment="Center">s</TextBlock>
                        </StackPanel>
                    </WrapPanel>
                </Grid>
                <Button
                    Grid.Column="1"
                    HorizontalAlignment="Left"
                    Command="{Binding SlewToRaDecCommand}">
                    <TextBlock
                        Padding="5,0,5,0"
                        Foreground="{StaticResource ButtonForegroundBrush}"
                        Text="{ns:Loc LblSlew}" />
                </Button>
            </Grid>
            <Grid Grid.Row="3" Margin="0,5,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid DataContext="{Binding SlewScopeToAltAz}">
                    <WrapPanel DataContext="{Binding Coordinates}" Orientation="Horizontal">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock
                                MinWidth="24"
                                VerticalAlignment="Center"
                                Text="Alt" />
                            <TextBox
                                MinWidth="30"
                                Margin="5,0,0,0"
                                TextAlignment="Right">
                                <TextBox.Text>
                                    <MultiBinding Converter="{StaticResource DecDegreeConverter}" UpdateSourceTrigger="LostFocus">
                                        <Binding Path="NegativeAlt" />
                                        <Binding Path="AltDegrees">
                                            <Binding.ValidationRules>
                                                <rules:DegreesRule />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </MultiBinding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBlock VerticalAlignment="Center">d</TextBlock>
                            <TextBox
                                MinWidth="30"
                                Margin="5,0,0,0"
                                TextAlignment="Right">
                                <TextBox.Text>
                                    <Binding Path="AltMinutes" UpdateSourceTrigger="LostFocus">
                                        <Binding.ValidationRules>
                                            <rules:MinutesRule />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBlock VerticalAlignment="Center">m</TextBlock>
                            <TextBox
                                MinWidth="30"
                                Margin="5,0,0,0"
                                TextAlignment="Right">
                                <TextBox.Text>
                                    <Binding Path="AltSeconds" UpdateSourceTrigger="LostFocus">
                                        <Binding.ValidationRules>
                                            <rules:SecondsRule />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">s</TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock
                                MinWidth="24"
                                VerticalAlignment="Center"
                                Text="Az" />
                            <TextBox
                                MinWidth="30"
                                Margin="5,0,0,0"
                                TextAlignment="Right">
                                <TextBox.Text>
                                    <Binding Path="AzDegrees" UpdateSourceTrigger="LostFocus">
                                        <Binding.ValidationRules>
                                            <rules:IntRangeRule>
                                                <rules:IntRangeRule.ValidRange>
                                                    <rules:IntRangeChecker Maximum="359" Minimum="0" />
                                                </rules:IntRangeRule.ValidRange>
                                            </rules:IntRangeRule>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBlock VerticalAlignment="Center">d</TextBlock>
                            <TextBox
                                MinWidth="30"
                                Margin="5,0,0,0"
                                TextAlignment="Right">
                                <TextBox.Text>
                                    <Binding Path="AzMinutes" UpdateSourceTrigger="LostFocus">
                                        <Binding.ValidationRules>
                                            <rules:MinutesRule />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBlock VerticalAlignment="Center">m</TextBlock>
                            <TextBox
                                MinWidth="30"
                                Margin="5,0,0,0"
                                TextAlignment="Right">
                                <TextBox.Text>
                                    <Binding Path="AzSeconds" UpdateSourceTrigger="LostFocus">
                                        <Binding.ValidationRules>
                                            <rules:SecondsRule />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                            <TextBlock VerticalAlignment="Center">s</TextBlock>
                        </StackPanel>
                    </WrapPanel>
                </Grid>
                <Button
                    Grid.Column="1"
                    HorizontalAlignment="Left"
                    Command="{Binding SlewToAltAzCommand}">
                    <TextBlock
                        Padding="5,0,5,0"
                        Foreground="{StaticResource ButtonForegroundBrush}"
                        Text="{ns:Loc LblSlew}" />
                </Button>
            </Grid>




            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>


                <Grid Grid.Column="2" Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <TextBlock Text="{ns:Loc LblRate}" />
                    <ComboBox
                        Grid.Row="1"
                        Height="25"
                        VerticalAlignment="Top"
                        ItemsSource="{Binding AxisRates}"
                        SelectedValue="{Binding AxisRate}" />
                </Grid>

                <Button
                    Grid.Row="1"
                    Grid.Column="0"
                    Margin="5">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource InverseMultiBooleanORConverter}">
                            <Binding Converter="{StaticResource InverseBooleanConverter}" Path="TelescopeInfo.CanMovePrimaryAxis" />
                            <Binding Path="TelescopeInfo.AtPark" />
                        </MultiBinding>
                    </Button.IsEnabled>
                    <TextBlock Foreground="{StaticResource ButtonForegroundBrush}" Text="{ns:Loc LblAbbrWest}" />
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewStylusDown">
                            <i:InvokeCommandAction Command="{Binding MoveAxisCommand}" CommandParameter="WEST" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewStylusUp">
                            <i:InvokeCommandAction Command="{Binding StopMoveAxisCommand}" CommandParameter="WEST" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewTouchDown">
                            <i:InvokeCommandAction Command="{Binding MoveAxisCommand}" CommandParameter="WEST" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewTouchUp">
                            <i:InvokeCommandAction Command="{Binding StopMoveAxisCommand}" CommandParameter="WEST" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding MoveAxisCommand}" CommandParameter="WEST" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding StopMoveAxisCommand}" CommandParameter="WEST" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>

                <Button
                    Grid.Row="1"
                    Grid.Column="2"
                    Margin="5">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource InverseMultiBooleanORConverter}">
                            <Binding Converter="{StaticResource InverseBooleanConverter}" Path="TelescopeInfo.CanMovePrimaryAxis" />
                            <Binding Path="TelescopeInfo.AtPark" />
                        </MultiBinding>
                    </Button.IsEnabled>
                    <TextBlock Foreground="{StaticResource ButtonForegroundBrush}" Text="{ns:Loc LblAbbrEast}" />
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewStylusDown">
                            <i:InvokeCommandAction Command="{Binding MoveAxisCommand}" CommandParameter="EAST" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewStylusUp">
                            <i:InvokeCommandAction Command="{Binding StopMoveAxisCommand}" CommandParameter="EAST" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewTouchDown">
                            <i:InvokeCommandAction Command="{Binding MoveAxisCommand}" CommandParameter="EAST" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewTouchUp">
                            <i:InvokeCommandAction Command="{Binding StopMoveAxisCommand}" CommandParameter="EAST" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding MoveAxisCommand}" CommandParameter="EAST" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding StopMoveAxisCommand}" CommandParameter="EAST" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>

                <Button
                    Grid.Row="0"
                    Grid.Column="1"
                    Margin="5">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource InverseMultiBooleanORConverter}">
                            <Binding Converter="{StaticResource InverseBooleanConverter}" Path="TelescopeInfo.CanMoveSecondaryAxis" />
                            <Binding Path="TelescopeInfo.AtPark" />
                        </MultiBinding>
                    </Button.IsEnabled>
                    <TextBlock Foreground="{StaticResource ButtonForegroundBrush}" Text="{ns:Loc LblAbbrNorth}" />
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewStylusDown">
                            <i:InvokeCommandAction Command="{Binding MoveAxisCommand}" CommandParameter="NORTH" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewStylusUp">
                            <i:InvokeCommandAction Command="{Binding StopMoveAxisCommand}" CommandParameter="NORTH" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewTouchDown">
                            <i:InvokeCommandAction Command="{Binding MoveAxisCommand}" CommandParameter="NORTH" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewTouchUp">
                            <i:InvokeCommandAction Command="{Binding StopMoveAxisCommand}" CommandParameter="NORTH" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding MoveAxisCommand}" CommandParameter="NORTH" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding StopMoveAxisCommand}" CommandParameter="NORTH" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>

                <Button
                    Grid.Row="2"
                    Grid.Column="1"
                    Margin="5">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource InverseMultiBooleanORConverter}">
                            <Binding Converter="{StaticResource InverseBooleanConverter}" Path="TelescopeInfo.CanMoveSecondaryAxis" />
                            <Binding Path="TelescopeInfo.AtPark" />
                        </MultiBinding>
                    </Button.IsEnabled>
                    <TextBlock Foreground="{StaticResource ButtonForegroundBrush}" Text="{ns:Loc LblAbbrSouth}" />
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewStylusDown">
                            <i:InvokeCommandAction Command="{Binding MoveAxisCommand}" CommandParameter="SOUTH" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewStylusUp">
                            <i:InvokeCommandAction Command="{Binding StopMoveAxisCommand}" CommandParameter="SOUTH" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewTouchDown">
                            <i:InvokeCommandAction Command="{Binding MoveAxisCommand}" CommandParameter="SOUTH" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewTouchUp">
                            <i:InvokeCommandAction Command="{Binding StopMoveAxisCommand}" CommandParameter="SOUTH" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding MoveAxisCommand}" CommandParameter="SOUTH" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding StopMoveAxisCommand}" CommandParameter="SOUTH" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>

                <Button
                    Grid.Row="1"
                    Grid.Column="1"
                    Margin="5"
                    Command="{Binding StopCommand}"
                    IsEnabled="{Binding TelescopeInfo.AtPark, Converter={StaticResource InverseBooleanConverter}}">
                    <TextBlock Foreground="{StaticResource ButtonForegroundBrush}" Text="{ns:Loc LblStop}" />
                </Button>
            </Grid>
            <Button
                Grid.Row="1"
                Margin="5"
                HorizontalAlignment="Stretch"
                Command="{Binding ParkCommand}"
                Visibility="{Binding TelescopeInfo.AtPark, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                <TextBlock Foreground="{StaticResource ButtonForegroundBrush}" Text="{ns:Loc LblPark}" />
            </Button>
            <Button
                Grid.Row="1"
                Margin="5"
                HorizontalAlignment="Stretch"
                Command="{Binding UnparkCommand}"
                Visibility="{Binding TelescopeInfo.AtPark, Converter={StaticResource VisibilityConverter}}">
                <TextBlock Foreground="{StaticResource ButtonForegroundBrush}" Text="{ns:Loc LblUnpark}" />
            </Button>
        </Grid>
    </DataTemplate>

    <GeometryGroup x:Key="ScopeControlSVG">
        <PathGeometry Figures="M 253.552,-0.1026L 482.375,-0.1026L 482.375,141.319L 253.552,141.319L 253.552,-0.1026 Z " />
        <PathGeometry Figures="M 510.131,165.564L 738.953,165.564L 738.953,306.985L 510.131,306.985L 510.131,165.564 Z " />
        <PathGeometry Figures="M -7.62939e-006,165.564L 228.828,165.564L 228.828,306.985L -7.62939e-006,306.985L -7.62939e-006,165.564 Z " />
        <PathGeometry Figures="M 253.552,333.245L 482.375,333.245L 482.375,474.667L 253.552,474.667L 253.552,333.245 Z " />
        <PathGeometry Figures="M 253.552,165.564L 482.375,165.564L 482.375,306.985L 253.552,306.985L 253.552,165.564 Z " />
    </GeometryGroup>
</ResourceDictionary>
