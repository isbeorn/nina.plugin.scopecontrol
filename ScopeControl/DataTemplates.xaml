<ResourceDictionary
    x:Class="ScopeControl.DataTemplates"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:alt="clr-namespace:NINA.WPF.Base.View;assembly=NINA.WPF.Base"
    xmlns:converter="clr-namespace:NINA.Core.Utility.Converters;assembly=NINA.Core"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:ScopeControl"
    xmlns:ns="clr-namespace:NINA.Core.Locale;assembly=NINA.Core"
    xmlns:oxy="clr-namespace:OxyPlot.Wpf;assembly=OxyPlot.Wpf"
    xmlns:rules="clr-namespace:NINA.Core.Utility.ValidationRules;assembly=NINA.Core"
    xmlns:util="clr-namespace:NINA.Core.Utility;assembly=NINA.Core">
    <converter:InverseBooleanToVisibilityCollapsedConverter x:Key="InverseBooleanToVisibilityCollapsedConverter" />
    <converter:InverseMultiBooleanORConverter x:Key="InverseMultiBooleanORConverter" />
    <converter:InverseBooleanConverter x:Key="InverseBooleanConverter" />
    <converter:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" />
    <converter:NullToVisibilityCollapsedConverter x:Key="NullToVisibilityCollapsedConverter" />
    <converter:SetAlphaToColorConverter x:Key="SetAlphaToColorConverter" />
    <BooleanToVisibilityConverter x:Key="VisibilityConverter" />

    <DataTemplate x:Key="ScopeControl.ScopeControlDock_Dockable">
        <Grid Margin="5" IsEnabled="{Binding TelescopeInfo.Connected}">
            <Grid.RowDefinitions>
                <RowDefinition Height="5*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>


            <Grid Grid.Row="2" Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <ComboBox
                    x:Name="SlewMode"
                    VerticalAlignment="Stretch"
                    SelectedIndex="0">
                    <ComboBoxItem>RA/Dec</ComboBoxItem>
                    <ComboBoxItem>Alt/Az</ComboBoxItem>
                </ComboBox>

                <ContentControl Grid.Column="1" Margin="5,0,0,0">
                    <ContentControl.Resources>

                        <ControlTemplate x:Key="SlewByRaDec">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid DataContext="{Binding SlewScopeToRaDec}">
                                    <WrapPanel DataContext="{Binding Coordinates}" Orientation="Horizontal">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock
                                                MinWidth="24"
                                                VerticalAlignment="Center"
                                                Text="RA" />
                                            <TextBox
                                                MinWidth="30"
                                                Margin="5,0,0,0"
                                                TextAlignment="Right">
                                                <TextBox.Text>
                                                    <Binding Path="RAHours" UpdateSourceTrigger="LostFocus">
                                                        <Binding.ValidationRules>
                                                            <rules:HoursRule />
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                            <TextBlock VerticalAlignment="Center">h</TextBlock>
                                            <TextBox
                                                MinWidth="30"
                                                Margin="5,0,0,0"
                                                TextAlignment="Right">
                                                <TextBox.Text>
                                                    <Binding Path="RAMinutes" UpdateSourceTrigger="LostFocus">
                                                        <Binding.ValidationRules>
                                                            <rules:MinutesRule />
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                            <TextBlock VerticalAlignment="Center">m</TextBlock>
                                            <TextBox
                                                MinWidth="30"
                                                Margin="5,0,0,0"
                                                TextAlignment="Right">
                                                <TextBox.Text>
                                                    <Binding Path="RASeconds" UpdateSourceTrigger="LostFocus">
                                                        <Binding.ValidationRules>
                                                            <rules:SecondsRule />
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                            <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">s</TextBlock>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock
                                                MinWidth="24"
                                                VerticalAlignment="Center"
                                                Text="Dec" />
                                            <TextBox
                                                MinWidth="30"
                                                Margin="5,0,0,0"
                                                TextAlignment="Right">
                                                <TextBox.Text>
                                                    <MultiBinding Converter="{StaticResource DecDegreeConverter}" UpdateSourceTrigger="LostFocus">
                                                        <Binding Path="NegativeDec" />
                                                        <Binding Path="DecDegrees">
                                                            <Binding.ValidationRules>
                                                                <rules:DegreesRule />
                                                            </Binding.ValidationRules>
                                                        </Binding>
                                                    </MultiBinding>
                                                </TextBox.Text>
                                            </TextBox>
                                            <TextBlock VerticalAlignment="Center">d</TextBlock>
                                            <TextBox
                                                MinWidth="30"
                                                Margin="5,0,0,0"
                                                TextAlignment="Right">
                                                <TextBox.Text>
                                                    <Binding Path="DecMinutes" UpdateSourceTrigger="LostFocus">
                                                        <Binding.ValidationRules>
                                                            <rules:MinutesRule />
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                            <TextBlock VerticalAlignment="Center">m</TextBlock>
                                            <TextBox
                                                MinWidth="30"
                                                Margin="5,0,0,0"
                                                TextAlignment="Right">
                                                <TextBox.Text>
                                                    <Binding Path="DecSeconds" UpdateSourceTrigger="LostFocus">
                                                        <Binding.ValidationRules>
                                                            <rules:SecondsRule />
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                            <TextBlock VerticalAlignment="Center">s</TextBlock>
                                        </StackPanel>
                                    </WrapPanel>
                                </Grid>
                                <Button
                                    Grid.Column="1"
                                    HorizontalAlignment="Left"
                                    Command="{Binding SlewToRaDecCommand}">
                                    <TextBlock
                                        Padding="5,0,5,0"
                                        Foreground="{StaticResource ButtonForegroundBrush}"
                                        Text="{ns:Loc LblSlew}" />
                                </Button>
                            </Grid>
                        </ControlTemplate>
                        <ControlTemplate x:Key="SlewByAltAz">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid DataContext="{Binding SlewScopeToAltAz}">
                                    <WrapPanel DataContext="{Binding Coordinates}" Orientation="Horizontal">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock
                                                MinWidth="24"
                                                VerticalAlignment="Center"
                                                Text="Alt" />
                                            <TextBox
                                                MinWidth="30"
                                                Margin="5,0,0,0"
                                                TextAlignment="Right">
                                                <TextBox.Text>
                                                    <MultiBinding Converter="{StaticResource DecDegreeConverter}" UpdateSourceTrigger="LostFocus">
                                                        <Binding Path="NegativeAlt" />
                                                        <Binding Path="AltDegrees">
                                                            <Binding.ValidationRules>
                                                                <rules:DegreesRule />
                                                            </Binding.ValidationRules>
                                                        </Binding>
                                                    </MultiBinding>
                                                </TextBox.Text>
                                            </TextBox>
                                            <TextBlock VerticalAlignment="Center">d</TextBlock>
                                            <TextBox
                                                MinWidth="30"
                                                Margin="5,0,0,0"
                                                TextAlignment="Right">
                                                <TextBox.Text>
                                                    <Binding Path="AltMinutes" UpdateSourceTrigger="LostFocus">
                                                        <Binding.ValidationRules>
                                                            <rules:MinutesRule />
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                            <TextBlock VerticalAlignment="Center">m</TextBlock>
                                            <TextBox
                                                MinWidth="30"
                                                Margin="5,0,0,0"
                                                TextAlignment="Right">
                                                <TextBox.Text>
                                                    <Binding Path="AltSeconds" UpdateSourceTrigger="LostFocus">
                                                        <Binding.ValidationRules>
                                                            <rules:SecondsRule />
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                            <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">s</TextBlock>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock
                                                MinWidth="24"
                                                VerticalAlignment="Center"
                                                Text="Az" />
                                            <TextBox
                                                MinWidth="30"
                                                Margin="5,0,0,0"
                                                TextAlignment="Right">
                                                <TextBox.Text>
                                                    <Binding Path="AzDegrees" UpdateSourceTrigger="LostFocus">
                                                        <Binding.ValidationRules>
                                                            <rules:IntRangeRule>
                                                                <rules:IntRangeRule.ValidRange>
                                                                    <rules:IntRangeChecker Maximum="359" Minimum="0" />
                                                                </rules:IntRangeRule.ValidRange>
                                                            </rules:IntRangeRule>
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                            <TextBlock VerticalAlignment="Center">d</TextBlock>
                                            <TextBox
                                                MinWidth="30"
                                                Margin="5,0,0,0"
                                                TextAlignment="Right">
                                                <TextBox.Text>
                                                    <Binding Path="AzMinutes" UpdateSourceTrigger="LostFocus">
                                                        <Binding.ValidationRules>
                                                            <rules:MinutesRule />
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                            <TextBlock VerticalAlignment="Center">m</TextBlock>
                                            <TextBox
                                                MinWidth="30"
                                                Margin="5,0,0,0"
                                                TextAlignment="Right">
                                                <TextBox.Text>
                                                    <Binding Path="AzSeconds" UpdateSourceTrigger="LostFocus">
                                                        <Binding.ValidationRules>
                                                            <rules:SecondsRule />
                                                        </Binding.ValidationRules>
                                                    </Binding>
                                                </TextBox.Text>
                                            </TextBox>
                                            <TextBlock VerticalAlignment="Center">s</TextBlock>
                                        </StackPanel>
                                    </WrapPanel>
                                </Grid>
                                <Button
                                    Grid.Column="1"
                                    HorizontalAlignment="Left"
                                    Command="{Binding SlewToAltAzCommand}">
                                    <TextBlock
                                        Padding="5,0,5,0"
                                        Foreground="{StaticResource ButtonForegroundBrush}"
                                        Text="{ns:Loc LblSlew}" />
                                </Button>
                            </Grid>
                        </ControlTemplate>
                    </ContentControl.Resources>
                    <ContentControl.Style>
                        <Style TargetType="ContentControl">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedIndex, ElementName=SlewMode}" Value="0">
                                    <Setter Property="Template" Value="{DynamicResource SlewByRaDec}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding SelectedIndex, ElementName=SlewMode}" Value="1">
                                    <Setter Property="Template" Value="{DynamicResource SlewByAltAz}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>
            </Grid>






            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>




                <Grid Grid.Column="2" Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <TextBlock Text="{ns:Loc LblRate}" />
                    <ComboBox
                        Grid.Row="1"
                        Height="25"
                        VerticalAlignment="Top"
                        ItemsSource="{Binding AxisRates}"
                        SelectedValue="{Binding AxisRate}" />
                </Grid>

                <Button
                    Grid.Row="1"
                    Grid.Column="0"
                    Margin="5">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource InverseMultiBooleanORConverter}">
                            <Binding Converter="{StaticResource InverseBooleanConverter}" Path="TelescopeInfo.CanMovePrimaryAxis" />
                            <Binding Path="TelescopeInfo.AtPark" />
                        </MultiBinding>
                    </Button.IsEnabled>
                    <TextBlock Foreground="{StaticResource ButtonForegroundBrush}" Text="{ns:Loc LblAbbrWest}" />
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewStylusDown">
                            <i:InvokeCommandAction Command="{Binding MoveAxisCommand}" CommandParameter="WEST" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewStylusUp">
                            <i:InvokeCommandAction Command="{Binding StopMoveAxisCommand}" CommandParameter="WEST" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewTouchDown">
                            <i:InvokeCommandAction Command="{Binding MoveAxisCommand}" CommandParameter="WEST" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewTouchUp">
                            <i:InvokeCommandAction Command="{Binding StopMoveAxisCommand}" CommandParameter="WEST" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding MoveAxisCommand}" CommandParameter="WEST" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding StopMoveAxisCommand}" CommandParameter="WEST" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>

                <Button
                    Grid.Row="1"
                    Grid.Column="2"
                    Margin="5">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource InverseMultiBooleanORConverter}">
                            <Binding Converter="{StaticResource InverseBooleanConverter}" Path="TelescopeInfo.CanMovePrimaryAxis" />
                            <Binding Path="TelescopeInfo.AtPark" />
                        </MultiBinding>
                    </Button.IsEnabled>
                    <TextBlock Foreground="{StaticResource ButtonForegroundBrush}" Text="{ns:Loc LblAbbrEast}" />
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewStylusDown">
                            <i:InvokeCommandAction Command="{Binding MoveAxisCommand}" CommandParameter="EAST" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewStylusUp">
                            <i:InvokeCommandAction Command="{Binding StopMoveAxisCommand}" CommandParameter="EAST" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewTouchDown">
                            <i:InvokeCommandAction Command="{Binding MoveAxisCommand}" CommandParameter="EAST" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewTouchUp">
                            <i:InvokeCommandAction Command="{Binding StopMoveAxisCommand}" CommandParameter="EAST" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding MoveAxisCommand}" CommandParameter="EAST" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding StopMoveAxisCommand}" CommandParameter="EAST" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>

                <Button
                    Grid.Row="0"
                    Grid.Column="1"
                    Margin="5">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource InverseMultiBooleanORConverter}">
                            <Binding Converter="{StaticResource InverseBooleanConverter}" Path="TelescopeInfo.CanMoveSecondaryAxis" />
                            <Binding Path="TelescopeInfo.AtPark" />
                        </MultiBinding>
                    </Button.IsEnabled>
                    <TextBlock Foreground="{StaticResource ButtonForegroundBrush}" Text="{ns:Loc LblAbbrNorth}" />
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewStylusDown">
                            <i:InvokeCommandAction Command="{Binding MoveAxisCommand}" CommandParameter="NORTH" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewStylusUp">
                            <i:InvokeCommandAction Command="{Binding StopMoveAxisCommand}" CommandParameter="NORTH" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewTouchDown">
                            <i:InvokeCommandAction Command="{Binding MoveAxisCommand}" CommandParameter="NORTH" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewTouchUp">
                            <i:InvokeCommandAction Command="{Binding StopMoveAxisCommand}" CommandParameter="NORTH" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding MoveAxisCommand}" CommandParameter="NORTH" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding StopMoveAxisCommand}" CommandParameter="NORTH" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>

                <Button
                    Grid.Row="2"
                    Grid.Column="1"
                    Margin="5">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource InverseMultiBooleanORConverter}">
                            <Binding Converter="{StaticResource InverseBooleanConverter}" Path="TelescopeInfo.CanMoveSecondaryAxis" />
                            <Binding Path="TelescopeInfo.AtPark" />
                        </MultiBinding>
                    </Button.IsEnabled>
                    <TextBlock Foreground="{StaticResource ButtonForegroundBrush}" Text="{ns:Loc LblAbbrSouth}" />
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewStylusDown">
                            <i:InvokeCommandAction Command="{Binding MoveAxisCommand}" CommandParameter="SOUTH" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewStylusUp">
                            <i:InvokeCommandAction Command="{Binding StopMoveAxisCommand}" CommandParameter="SOUTH" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewTouchDown">
                            <i:InvokeCommandAction Command="{Binding MoveAxisCommand}" CommandParameter="SOUTH" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewTouchUp">
                            <i:InvokeCommandAction Command="{Binding StopMoveAxisCommand}" CommandParameter="SOUTH" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                            <i:InvokeCommandAction Command="{Binding MoveAxisCommand}" CommandParameter="SOUTH" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding StopMoveAxisCommand}" CommandParameter="SOUTH" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>

                <Button
                    Grid.Row="1"
                    Grid.Column="1"
                    Margin="5"
                    Command="{Binding StopCommand}"
                    IsEnabled="{Binding TelescopeInfo.AtPark, Converter={StaticResource InverseBooleanConverter}}">
                    <TextBlock Foreground="{StaticResource ButtonForegroundBrush}" Text="{ns:Loc LblStop}" />
                </Button>


                <Button
                    Grid.Row="2"
                    Grid.Column="2"
                    Margin="5"
                    Command="{Binding StopTrackingCommand}"
                    IsEnabled="{Binding TelescopeInfo.AtPark, Converter={StaticResource InverseBooleanConverter}}"
                    Visibility="{Binding TelescopeInfo.TrackingEnabled, Converter={StaticResource VisibilityConverter}}">
                    <TextBlock
                        Foreground="{StaticResource ButtonForegroundBrush}"
                        TextAlignment="Center"
                        TextWrapping="Wrap">
                        Stop<LineBreak />
                        Tracking</TextBlock>
                </Button>
                <Button
                    Grid.Row="2"
                    Grid.Column="2"
                    Margin="5"
                    Command="{Binding StartTrackingCommand}"
                    IsEnabled="{Binding TelescopeInfo.AtPark, Converter={StaticResource InverseBooleanConverter}}"
                    Visibility="{Binding TelescopeInfo.TrackingEnabled, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                    <TextBlock
                        Foreground="{StaticResource ButtonForegroundBrush}"
                        TextAlignment="Center"
                        TextWrapping="Wrap">
                        Start<LineBreak />
                        Tracking</TextBlock>
                </Button>
            </Grid>
            <Button
                Grid.Row="1"
                Margin="5"
                HorizontalAlignment="Stretch"
                Command="{Binding ParkCommand}"
                Visibility="{Binding TelescopeInfo.AtPark, Converter={StaticResource InverseBoolToVisibilityConverter}}">
                <TextBlock Foreground="{StaticResource ButtonForegroundBrush}" Text="{ns:Loc LblPark}" />
            </Button>
            <Button
                Grid.Row="1"
                Margin="5"
                HorizontalAlignment="Stretch"
                Command="{Binding UnparkCommand}"
                Visibility="{Binding TelescopeInfo.AtPark, Converter={StaticResource VisibilityConverter}}">
                <TextBlock Foreground="{StaticResource ButtonForegroundBrush}" Text="{ns:Loc LblUnpark}" />
            </Button>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ScopeControl.AltitudeDock_Dockable">
        <Grid Margin="5">
            <Grid Visibility="{Binding Target, Converter={StaticResource NullToVisibilityCollapsedConverter}}">
                <Grid.Resources>
                    <util:BindingProxy x:Key="nighttimeProxy" Data="{Binding NighttimeData}" />
                </Grid.Resources>
                <alt:AltitudeChart
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Stretch"
                    VerticalContentAlignment="Stretch"
                    AnnotateAltitudeAxis="False"
                    AnnotateTimeAxis="False"
                    DataContext="{Binding Target}"
                    NighttimeData="{Binding Source={StaticResource nighttimeProxy}, Path=Data}" />
            </Grid>
            <Grid Visibility="{Binding TelescopeInfo.Connected, Converter={StaticResource InverseBooleanToVisibilityCollapsedConverter}}">
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="Telescope not connected" />
            </Grid>
            <Grid Visibility="{Binding TelescopeInfo.Connected, Converter={StaticResource VisibilityConverter}}">
                <Grid Visibility="{Binding TelescopeInfo.TrackingEnabled, Converter={StaticResource InverseBooleanToVisibilityCollapsedConverter}}">
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text="Telescope not tracking" />
                </Grid>
            </Grid>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ScopeControl.AzimuthDock_Dockable">
        <Grid Margin="5">
            <oxy:Plot
                Background="{StaticResource BackgroundBrush}"
                PlotAreaBackground="{StaticResource BackgroundBrush}"
                PlotAreaBorderColor="{Binding Path=Color, Source={StaticResource BorderBrush}}">
                <!--<oxy:Plot.PlotAreaBackground>
                    <SolidColorBrush Color="#66000000" />
                </oxy:Plot.PlotAreaBackground>-->
                <oxy:Plot.Axes>
                    <!--  Currently the center is 0 - so the axis values need to be inverted  -->
                    <oxy:MagnitudeAxis
                        Key="AltitudeAxis"
                        AxislineColor="{Binding Path=Color, Source={StaticResource PrimaryBrush}}"
                        IsPanEnabled="False"
                        IsZoomEnabled="False"
                        MajorGridlineColor="{Binding Path=Color, Source={StaticResource PrimaryBrush}, Converter={StaticResource SetAlphaToColorConverter}, ConverterParameter=60}"
                        MajorStep="10"
                        Maximum="00"
                        Minimum="-90"
                        MinorGridlineColor="Transparent"
                        TextColor="Transparent" />
                    <oxy:AngleAxis
                        Key="AzimuthAxis"
                        AxislineColor="{Binding Path=Color, Source={StaticResource PrimaryBrush}}"
                        EndAngle="90"
                        IsPanEnabled="False"
                        IsZoomEnabled="False"
                        MajorGridlineColor="{Binding Path=Color, Source={StaticResource PrimaryBrush}, Converter={StaticResource SetAlphaToColorConverter}, ConverterParameter=60}"
                        MajorStep="45"
                        Maximum="360"
                        Minimum="0"
                        MinorGridlineColor="{Binding Path=Color, Source={StaticResource PrimaryBrush}, Converter={StaticResource SetAlphaToColorConverter}, ConverterParameter=20}"
                        MinorStep="22.5"
                        StartAngle="450"
                        TextColor="{Binding Path=Color, Source={StaticResource PrimaryBrush}}"
                        TicklineColor="{Binding Path=Color, Source={StaticResource PrimaryBrush}, Converter={StaticResource SetAlphaToColorConverter}, ConverterParameter=60}" />
                </oxy:Plot.Axes>
                <oxy:Plot.Series>
                    <oxy:AreaSeries
                        DataFieldX="X"
                        DataFieldX2="X2"
                        DataFieldY="Y"
                        DataFieldY2="Y"
                        ItemsSource="{Binding Horizon}"
                        XAxisKey="AltitudeAxis"
                        YAxisKey="AzimuthAxis"
                        Color="{Binding Path=Color, Source={StaticResource ButtonBackgroundBrush}}" />
                    <oxy:LineSeries
                        DataFieldX="X"
                        DataFieldY="Y"
                        ItemsSource="{Binding TelescopePath}"
                        XAxisKey="AltitudeAxis"
                        YAxisKey="AzimuthAxis"
                        Color="{Binding Path=Color, Source={StaticResource SecondaryBrush}}" />
                    <oxy:LineSeries
                        DataFieldX="X"
                        DataFieldY="Y"
                        ItemsSource="{Binding Moon}"
                        Visibility="{Binding ShowMoon, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}"
                        XAxisKey="AltitudeAxis"
                        YAxisKey="AzimuthAxis"
                        Color="{Binding MoonColor}" />
                </oxy:Plot.Series>
                <oxy:Plot.Annotations>
                    <oxy:PointAnnotation
                        Fill="{Binding Path=Color, Source={StaticResource PrimaryBrush}}"
                        Shape="Cross"
                        Stroke="{Binding Path=Color, Source={StaticResource PrimaryBrush}}"
                        StrokeThickness="2"
                        X="{Binding TelescopePosition.X}"
                        XAxisKey="AltitudeAxis"
                        Y="{Binding TelescopePosition.Y}"
                        YAxisKey="AzimuthAxis" />
                    <oxy:PointAnnotation
                        Fill="{Binding MoonColor}"
                        Shape="Circle"
                        Stroke="{Binding MoonColor}"
                        StrokeThickness="2"
                        X="{Binding MoonPosition.X}"
                        XAxisKey="AltitudeAxis"
                        Y="{Binding MoonPosition.Y}"
                        YAxisKey="AzimuthAxis" />
                </oxy:Plot.Annotations>
            </oxy:Plot>
            <Grid
                Margin="5"
                HorizontalAlignment="Right"
                VerticalAlignment="Top">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ToggleButton
                    Width="24"
                    Height="24"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    IsChecked="{Binding ShowMoon}">
                    <ToggleButton.ToolTip>
                        <ToolTip ToolTipService.ShowOnDisabled="True">
                            <TextBlock Text="{ns:Loc LblDisplayMoonChart}" />
                        </ToolTip>
                    </ToggleButton.ToolTip>
                    <ToggleButton.Style>
                        <Style BasedOn="{StaticResource TB}" TargetType="ToggleButton">
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Grid>
                                                <Path
                                                    Margin="5"
                                                    Data="{StaticResource NewMoonSVG}"
                                                    Fill="{StaticResource ButtonForegroundBrush}"
                                                    Stretch="Uniform" />
                                                <Path
                                                    Margin="5"
                                                    Data="{Binding MoonPhase, Converter={StaticResource MoonPhaseToGeometryConverter}}"
                                                    Fill="Black"
                                                    Stretch="Uniform" />
                                            </Grid>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Grid>
                                                <Path
                                                    Margin="5"
                                                    Data="{StaticResource NewMoonSVG}"
                                                    Fill="{StaticResource ButtonForegroundDisabledBrush}"
                                                    Stretch="Uniform" />
                                                <Path
                                                    Margin="5"
                                                    Data="{Binding MoonPhase, Converter={StaticResource MoonPhaseToGeometryConverter}}"
                                                    Fill="Black"
                                                    Stretch="Uniform" />
                                            </Grid>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <TextBlock
                    Grid.Row="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Top"
                    Foreground="{StaticResource ButtonForegroundBrush}"
                    Text="{Binding MoonSeparation}"
                    ToolTip="{ns:Loc LblMoonSeparation}"
                    Visibility="{Binding ShowMoon, Converter={StaticResource BooleanToVisibilityHiddenConverter}}" />
            </Grid>
        </Grid>
    </DataTemplate>

    <GeometryGroup x:Key="ScopeControlSVG">
        <PathGeometry Figures="M 253.552,-0.1026L 482.375,-0.1026L 482.375,141.319L 253.552,141.319L 253.552,-0.1026 Z " />
        <PathGeometry Figures="M 510.131,165.564L 738.953,165.564L 738.953,306.985L 510.131,306.985L 510.131,165.564 Z " />
        <PathGeometry Figures="M -7.62939e-006,165.564L 228.828,165.564L 228.828,306.985L -7.62939e-006,306.985L -7.62939e-006,165.564 Z " />
        <PathGeometry Figures="M 253.552,333.245L 482.375,333.245L 482.375,474.667L 253.552,474.667L 253.552,333.245 Z " />
        <PathGeometry Figures="M 253.552,165.564L 482.375,165.564L 482.375,306.985L 253.552,306.985L 253.552,165.564 Z " />
    </GeometryGroup>

    <GeometryGroup x:Key="ScopeControl_CrosshairSVG">
        <PathGeometry Figures="M 272.531,238.505C 272.531,219.948 257.495,204.907 238.932,204.907C 220.375,204.907 205.333,219.948 205.333,238.505C 205.333,257.068 220.375,272.109 238.932,272.109C 257.495,272.109 272.531,257.068 272.531,238.505 Z M 238.932,256.109C 229.229,256.109 221.333,248.215 221.333,238.505C 221.333,228.803 229.229,220.907 238.932,220.907C 248.64,220.907 256.531,228.803 256.531,238.505C 256.531,248.215 248.64,256.109 238.932,256.109 Z " />
        <PathGeometry Figures="M 426.136,230.505C 424.213,183.147 404.907,139.095 371.307,105.709C 337.812,72.428 293.973,53.3333 247.041,51.308L 247.041,-0.426666L 231.041,-0.426666L 231.041,51.308C 183.573,53.2293 139.521,72.324 106.24,105.709C 72.9587,139.095 53.76,183.043 51.8387,230.505L 0,230.505L 0,246.505L 51.7347,246.505C 53.6507,293.443 72.8547,337.385 106.136,370.776C 139.625,404.376 183.683,423.683 230.932,425.6L 230.932,477.333L 246.932,477.333L 246.932,425.6C 293.76,423.573 337.708,404.376 371.307,370.776C 404.907,337.172 424.213,293.333 426.136,246.401L 477.864,246.401L 477.864,230.505M 246.932,67.308C 335.041,71.36 406.079,142.401 410.136,230.505L 374.828,230.505C 372.907,196.803 358.932,165.657 335.041,141.871C 311.255,118.292 280.213,104.537 246.932,102.615M 230.932,67.308L 230.932,102.615C 161.068,106.453 106.88,160.641 103.041,230.505L 67.7347,230.505C 71.6827,140.907 141.333,71.256 230.932,67.308 Z M 230.932,409.709C 142.828,405.657 71.7867,334.615 67.7347,246.505L 103.041,246.505C 104.959,279.896 118.719,310.933 142.292,334.615C 166.079,358.505 197.229,372.48 230.932,374.401M 230.932,323.735L 230.932,358.401C 171.093,354.453 123.093,306.453 119.041,246.505L 153.708,246.505L 153.708,230.505L 119.041,230.505C 122.88,169.709 170.027,122.453 230.932,118.615L 230.932,153.281L 246.932,153.281L 246.932,118.615C 306.771,122.563 354.771,170.563 358.828,230.505L 324.161,230.505L 324.161,246.505L 358.828,246.505C 354.88,306.349 306.88,354.349 246.932,358.401L 246.932,323.735M 246.932,409.709L 246.932,374.401C 315.625,370.349 370.771,315.204 374.828,246.505L 410.136,246.505C 406.079,334.615 335.041,405.657 246.932,409.709 Z " />
    </GeometryGroup>

    <GeometryGroup x:Key="ScopeControl_AltitudeSVG">
        <PathGeometry Figures="M 1.01725e-005,0.349426L 1.01725e-005,421.333L 625.953,421.333L 625.953,0.349426M 15.12,15.4694L 610.839,15.4694L 610.839,406.213L 15.12,406.213" />
        <PathGeometry Figures="M 312.276,113.647C 296.183,113.224 280.485,120.109 265.011,132.781C 249.537,145.453 233.833,164.005 216.543,188.573C 181.953,237.709 141.089,311.073 86.8653,409.609L 101.464,417.641C 155.667,319.141 196.527,245.964 230.167,198.172C 246.991,174.276 262.027,156.771 275.568,145.677C 289.109,134.589 300.709,130.011 311.833,130.303C 322.959,130.595 334.657,135.844 348.131,147.563C 361.604,159.276 376.453,177.308 393.005,201.5C 426.104,249.891 466.1,322.781 519.157,419.229L 533.751,411.199C 480.704,314.761 440.724,241.745 406.756,192.095C 389.776,167.271 374.313,148.251 359.063,134.989C 343.813,121.729 328.371,114.073 312.276,113.647 Z " />
    </GeometryGroup>
    <GeometryGroup x:Key="ScopeControl_AzimuthSVG">
        <PathGeometry Figures="M 327.052,0.568054C 146.563,0.568054 0,147.129 0,327.62C 0,508.115 146.563,654.667 327.052,654.667C 507.541,654.667 654.104,508.115 654.104,327.62C 654.104,147.129 507.541,0.568054 327.052,0.568054 Z M 327.052,23.2441C 495.287,23.2441 631.427,159.385 631.427,327.62C 631.427,495.859 495.287,631.989 327.052,631.989C 158.817,631.989 22.6773,495.859 22.6773,327.62C 22.6773,159.385 158.817,23.2441 327.052,23.2441 Z " />
        <PathGeometry Figures="M 319.495,13.3281L 334.609,13.3281L 334.609,643.328L 319.495,643.328L 319.495,13.3281 Z " />
        <PathGeometry Figures="M 17.052,320.063L 644.912,320.063L 644.912,335.183L 17.052,335.183L 17.052,320.063 Z " />
        <PathGeometry Figures="M 110.484,100.229L 99.792,110.916L 543.755,554.88L 554.443,544.192" />
        <PathGeometry Figures="M 547.14,98.2441L 103.183,542.203L 113.869,552.896L 557.833,108.932" />
    </GeometryGroup>
</ResourceDictionary>
